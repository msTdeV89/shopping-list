{"version":3,"sources":["context/context.js","components/Header.js","components/Product.js","components/Main.js","components/Options.js","App.js","index.js"],"names":["ShoppingListContext","createContext","ShoppingListContextProvider","children","useState","products","setProducts","showAll","setShowAll","handleInitialApp","a","JSON","parse","localStorage","getItem","setItem","stringify","data","useEffect","handleNewProduct","product","Provider","value","handleShowAll","handleProductIsBought","id","map","isBought","handleClearAll","handleRemoveProduct","filter","Header","newProduct","setNewProduct","useContext","className","onSubmit","e","preventDefault","Math","floor","random","name","placeholder","onChange","target","IconButton","type","Product","Button","color","variant","size","onClick","Main","sort","b","length","Options","anchorEl","setAnchorEl","handleClosePopUp","open","Boolean","undefined","boughtProducts","aria-describedby","currentTarget","disabled","FormControlLabel","label","control","Switch","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82e0947a.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\r\n\r\nexport const ShoppingListContext = createContext();\r\n\r\nconst ShoppingListContextProvider = ({ children }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [showAll, setShowAll] = useState(true);\r\n\r\n  const handleInitialApp = async () => {\r\n    if (!JSON.parse(localStorage.getItem(\"products\"))) {\r\n      localStorage.setItem(\"products\", JSON.stringify(products));\r\n    } else {\r\n      const data = await JSON.parse(localStorage.getItem(\"products\"));\r\n      setProducts(data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleInitialApp();\r\n  }, []);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"products\", JSON.stringify(products));\r\n  }, [products]);\r\n\r\n  const handleNewProduct = async (product) => {\r\n    setProducts([...products, product]);\r\n  };\r\n  const handleProductIsBought = (id) => {\r\n    setProducts(\r\n      products.map((product) =>\r\n        product.id === id\r\n          ? { ...product, isBought: !product.isBought }\r\n          : product\r\n      )\r\n    );\r\n  };\r\n  const handleShowAll = () => {\r\n    setShowAll(!showAll);\r\n  };\r\n  const handleClearAll = () => {\r\n    setProducts([]);\r\n  };\r\n  const handleRemoveProduct = (id) => {\r\n    setProducts(products.filter((product) => product.id !== id));\r\n  };\r\n\r\n  return (\r\n    <ShoppingListContext.Provider\r\n      value={{\r\n        products,\r\n        showAll,\r\n        handleShowAll,\r\n        handleNewProduct,\r\n        handleProductIsBought,\r\n        handleClearAll,\r\n        handleRemoveProduct,\r\n      }}\r\n    >\r\n      {children}\r\n    </ShoppingListContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShoppingListContextProvider;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./header.css\";\r\nimport { ShoppingListContext } from \"../context/context\";\r\n\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nconst Header = () => {\r\n  const randomID = () => Math.floor(Math.random() * 9999999);\r\n\r\n  const [newProduct, setNewProduct] = useState(\"\");\r\n  const { handleNewProduct } = useContext(ShoppingListContext);\r\n\r\n  const handleInput = (e) => {\r\n    setNewProduct(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='header'>\r\n      <form\r\n        className='header__form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          if (newProduct) {\r\n            handleNewProduct({\r\n              id: randomID(),\r\n              name: newProduct,\r\n              isBought: false,\r\n            });\r\n            setNewProduct(\"\");\r\n          }\r\n        }}\r\n      >\r\n        <input\r\n          value={newProduct}\r\n          placeholder='product...'\r\n          className='header__input'\r\n          onChange={handleInput}\r\n        />\r\n        <IconButton className='header__button' type='submit'>\r\n          <span className='fas fa-plus'></span>\r\n        </IconButton>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./product.css\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Product = ({\r\n  id,\r\n  name,\r\n  isBought,\r\n  handleRemoveProduct,\r\n  handleProductIsBought,\r\n}) => {\r\n  return (\r\n    <li className='product__container'>\r\n      <Button\r\n        className={`${!isBought ? \"product\" : \"product product--isBought\"}`}\r\n        color='primary'\r\n        variant='contained'\r\n        size='small'\r\n        onClick={() => handleProductIsBought(id)}\r\n      >\r\n        <span className='product__name'>{name}</span>\r\n      </Button>\r\n      <Button\r\n        color='secondary'\r\n        variant='contained'\r\n        className='product__delete '\r\n        onClick={() => {\r\n          handleRemoveProduct(id);\r\n        }}\r\n      >\r\n        <span className='far fa-trash-alt'></span>\r\n      </Button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useContext } from \"react\";\r\nimport \"./main.css\";\r\nimport Product from \"./Product\";\r\nimport { ShoppingListContext } from \"../context/context\";\r\n\r\nconst Main = ({ products, showAll }) => {\r\n  const { handleProductIsBought, handleRemoveProduct } = useContext(\r\n    ShoppingListContext\r\n  );\r\n\r\n  products = products.sort((a, b) => a.isBought - b.isBought);\r\n  return (\r\n    <div className='main'>\r\n      {!products.length ? (\r\n        <h4 className='main__emptyList'>There is no products on your list.</h4>\r\n      ) : (\r\n        <ul className='main__list'>\r\n          {showAll\r\n            ? products.map(({ id, isBought, name }) => (\r\n                <Product\r\n                  key={id}\r\n                  id={id}\r\n                  isBought={isBought}\r\n                  name={name}\r\n                  handleProductIsBought={handleProductIsBought}\r\n                  handleRemoveProduct={handleRemoveProduct}\r\n                />\r\n              ))\r\n            : products\r\n                .filter((product) => !product.isBought)\r\n                .map(({ id, isBought, name }) => (\r\n                  <Product\r\n                    key={id}\r\n                    id={id}\r\n                    isBought={isBought}\r\n                    name={name}\r\n                    handleProductIsBought={handleProductIsBought}\r\n                    handleRemoveProduct={handleRemoveProduct}\r\n                  />\r\n                ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./options.css\";\r\nimport { ShoppingListContext } from \"../context/context\";\r\n\r\nimport {\r\n  Switch,\r\n  FormControlLabel,\r\n  Button,\r\n  Popover,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Options = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const { handleShowAll, showAll, handleClearAll, products } = useContext(\r\n    ShoppingListContext\r\n  );\r\n  const handleOpenPopUp = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n\r\n  const handleClosePopUp = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  const boughtProducts = products.filter((product) => product.isBought);\r\n\r\n  return (\r\n    <div className='options'>\r\n      <Button\r\n        aria-describedby={id}\r\n        onClick={handleOpenPopUp}\r\n        color='primary'\r\n        variant='contained'\r\n        className='options__clear'\r\n        size='small'\r\n        disabled={products.length ? false : true}\r\n      >\r\n        Clear All\r\n      </Button>\r\n      <FormControlLabel\r\n        label={`${showAll ? \"Hide Bought\" : \"Show All\"}`}\r\n        disabled={boughtProducts.length ? false : true}\r\n        control={\r\n          <Switch\r\n            color='primary'\r\n            onChange={(e) => {\r\n              handleShowAll(e);\r\n            }}\r\n          />\r\n        }\r\n      />\r\n      <Popover\r\n        className='options__popup'\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClosePopUp}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <Typography>Are you sure?</Typography>\r\n        <div className='options__popupGroup'>\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            className='options__popupBtn'\r\n            onClick={() => {\r\n              handleClosePopUp();\r\n            }}\r\n          >\r\n            No\r\n          </Button>\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            className='options__popupBtn'\r\n            onClick={() => {\r\n              handleClosePopUp();\r\n              handleClearAll();\r\n            }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </div>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React, { useContext } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Options from \"./components/Options\";\nimport { ShoppingListContext } from \"./context/context\";\n\nfunction App() {\n  const { products, showAll } = useContext(ShoppingListContext);\n\n  return (\n    <div className='app'>\n      <Header />\n      <Options />\n      <Main products={products} showAll={showAll} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport ShoppingListProvider from \"./context/context\";\n\nReactDOM.render(\n  <>\n    <ShoppingListProvider>\n      <App />\n    </ShoppingListProvider>\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}